<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="javascript.js"></script>
</head>
<body>
     <!-- <h1>Homepage</h1>
    <a href=https://www.theodinproject.com/lessons/foundations-links-and-images>click me</a>
    <a href="https://www.theodinproject.com/about" target="_blank" rel="noopener noreferrer">click me2</a>
    <a href="./pages/about.html">About</a>

    <img src="https://www.theodinproject.com/mstile-310x310.png">
    <img src="./images/dog.jpg">
    
    <ul>
        <li><a href="recipes/yourrecipe.html">Recipe Title 1</a></li>
        <li><a href="recipes/yourrecipe.html">Recipe Title 2</a></li>
        <li><a href="recipes/yourrecipe.html">Recipe Title 3</a></li>
      </ul>  -->


      <style>
        p{
          text-align: left;    
        }
      </style>           All text is one color

<div style="color: cadetblue; background-color: black; ;text-align: center;">Welcome in my first webpage with Mortada :)</div>
      <div>
        <p style="color: black">He said I'm</p>
       </div>
       <div>
        <p style="color:  darkgoldenrod;">As you'll learn, there are many ways to move elements around on a web page. New methods have been developed over the years and older things have fallen out of style. Flexbox is a relatively new way of manipulating elements in CSS, and its debut was revolutionary.</p>
      </div>
      <div class="alert-text">Please agree to our terms of service.</div>
      <div id="title">My Awesome 90's Page</div>
      
      <ul>
        <li><a href="recipes/yourrecipe.html">Recipe Title 1</a></li>
        <li><a href="recipes/yourrecipe.html">Recipe Title 2</a></li>
        <li><a href="recipes/yourrecipe.html">Recipe Title 3</a></li>
      </ul>  

      <div>
        <div>
            <div class="subsection header">Latest Posts</div>
            <p class="subsection" id="preview">
              This is where a preview for a post might go.
            </p>
          </div>

          <div class="main">
            <div class="list subsection">Red text</div>
          </div>
    

          <div class="main">
            <div class="list" id="subsection">Blue text</div>
          </div>

          <div class="main">
            <div class="list" id="subsection">Red text on yellow background</div>
          </div>


          <div id="parent">hi2
            <div class="child">hi3</div>
          </div>
 <div class="introduction">
   <h2>Introduction</h2>
   <a href="./pages/about.html">About</a>
</div>

<div class="main-content">
   <h2>Main Content</h2>
</div>

<div class="contact-us">
   <h2>Contact Us</h2>

   <p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
    minim veniam, <span class="highlight">quis nostrud <a href="https://www.dictionary.com/browse/exercitation">exercitation</a>
    ullamco laboris</span> nisi ut aliquip ex ea commodo consequat.   
  </p>
</div>

<h1>Basic document flow</h1>
<p>
  I am a basic block level element. My adjacent block level elements sit on new
  lines below me.
</p>

<p>
  By default we span 100% of the width of our parent element, and we are as tall
  as our child content. Our total width and height is our content + padding +
  border width/height.
</p>

<p>
  We are separated by our margins. Because of margin collapsing, we are
  separated by the width of one of our margins, not both.
</p>

<div class="image">
<p>
  Inline elements <span>like this one</span> and <span>this one</span> sit on
  the same line along with adjacent text nodes, if there is space on the same
  line. Overflowing inline elements will
  <span>wrap onto a new line if possible (like this one containing text)</span>,
  or just go on to a new line if not, much like this image will do:
  <img class="img" src="images/219269.jpg" alt="snippet of cloth"  />
</p>

</div>
<!-- flexbox -->
<div class="flex-container">
  <div class="one">The first class</div>
  <div class="two">The second class</div>
  <div class="three">The Third class</div>
</div>

<div class="container">
  <div class="child">sign in</div>
  <div class="child">sign up</div>
  <div class="child">log out</div>
 </div>
 
 <script>
  let num1=10;
  let num2=5;
  rul=num1*num2;
  // Your JavaScript goes here!
  alert(rul);
</script>
<button>Press me</button>
<div id="greeting"></div>


<script>
  const string = "The revolution will not be televised.";
console.log(string);
const badString = string;
console.log(badString);

const name = "Chris";
const greeting = `Hello,  ${name}`;
console.log(greeting); // "Hello, Chris"

const one = "Hello, ";
const two = "how are you?";
const joined = `${one}${two}`;
console.log(joined); // "Hello, how are you?"

const button = document.querySelector("button");

function greet() {
  const name = prompt("What is your name?");
  const greeting = document.querySelector("#greeting");
  greeting.textContent = `Hello ${name}, nice to see you!`;
}
button.addEventListener( "click",greet);

const song = "Fight the Youth";
const score = 9;
const highestScore = 10;
const output = `I like the song ${song}. I gave it a score of ${
  (score / highestScore) * 100
}%.`;
console.log(output); // "I like the song Fight the Youth. I gave it a score of 90%."

const newline = "One day you finally knew\nwhat you had to do, and began,";
console.log(newline);

/*
One day you finally knew
what you had to do, and began,
*/
const bigmouth = 'I\'ve got no right to take my placeâ€¦';
console.log(bigmouth);

const myString = "123";
const myNum = Number(myString);
console.log(typeof myNum);
// number

function favoriteAnimal(animal) {
   return animal + " is my favorite animal!"
 }

 console.log(favoriteAnimal('Goat'))
 function add7(number){
  return number+7
  
 }
console.log(add7(10))
  </script>

</body>
</html>




div{
    font-size: 64px;
    color: limegreen;
    padding: 200px;
    margin: 10px;
}
.alert-text {
    font-size: 64px;
    color: red;
    padding: 100px;
  }
#title {
     background-color: blueviolet;
font-size: 70px;
padding: 50px;  
  }

  /* .read,
  .unread {
         color: white;
         background-color: black;
} */

.subsection.header {
    color: red;
    background-color: dimgrey;
}
.subsection#preview{
    color: chartreuse;
    background-color: darkgreen;
}

.subsection {
    color: blue;
  }
                            /* in this code the text show with red color bec it's more specifically only class selectors*/
  /* rule 2 */
  .main .list {
    color: red;          
  }

  /* rule 1 */
#subsection {
    color: blue;
  }
                           /* in this code the text show with blue color bec it's more class selectors specifically using ID */
  /* rule 2 */
  .main .list {
    color: red;
  }

  /* rule 1 */
#subsection {
    background-color: yellow;
    color: blue;
  }
                          /*Both rules have only one ID selector, but rule 2 has a class selector in addition to the ID selector, so rule 2 has a higher specificity!*/
  /* rule 2 */
  .main #subsection {
   color: red;
  }

  
/* styles.css */

#parent {
  color: red;
}


.child {
  color: blue;
}

/* *{
    outline: 5px solid rgb(0, 255, 85);
  } */

  div {
    padding: 30px;
    text-align: center;
    margin-bottom: 100px;
    color: #0a0101;
  }
  
  .introduction {
    background-color: #548CA8;
  }
  
  .main-content {
    background-color: #476072;
  }
  
  .contact-us {
    text-align: right;
    background-color: #334257;
  }
  .highlight
  {
    background-color: maroon;
  }



  
  p {
    background: rgb(255 84 104 / 30%);
    color: black;
    border: 5px solid rgb(255 84 104);
    padding: 0px;
    margin: 100px;

  }
  
  span {
    background: rgb(144, 202, 7);
    border: 1px solid black;
  }
  
  .flex-container {
    display: flex; 
  }
  
  /* this selector selects all divs inside of .flex-container */
  .flex-container div  {
    background: peachpuff;
    color: #476072;
    border: 4px solid brown;
    height: 100px
    
  
  }
  
  .container {
    display: flex;
    flex-direction: column;
    height: 400px;
    padding: 16px;
    background: burlywood;
    border: 4px solid indigo;

   
    /* flex-wrap: wrap; */
   }
   
   .child {
    background-color:burlywood;
    color:#ffffff;
    border: 1px solid black;
    padding: 1px;
    margin: 5px;
    height: 140px;
    width: calc(100% / 3 - 20px);
    text-align: center;
    flex: 1 1 0%;
    align-self: center;
    gap: 10px;
   }
   .child:nth-child(1) {
    
    background-color: #334257;
    
   }
   
   .child:nth-child(2) {
    
        background-color: #476072;
        
   }
   
   .child:nth-child(3) {
    
    background-color: #548CA8;
    
   
   }
   .image{
      /* display: flex; */
      justify-content: center;
      align-items: center;

    }
    
    .image img {
      max-width: 100%;
      max-height: 100%;
      padding-left: 5px;
      /* Optional: Add additional styling as needed */
    }
   